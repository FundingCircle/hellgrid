version: 2

defaults: &defaults
  working_directory: ~/hellgrid
  docker:
    - image: ruby:2.5-alpine
  environment:
    BUNDLE_APP_CONFIG: ~/hellgrid/.bundle
    BUNDLE_PATH: ~/hellgrid/vendor/bundle
    BUNDLE_JOBS: 4
    BUNDLE_RETRY: 3

jobs:
  test:
    <<: *defaults
    steps:
      - &install_packages
        run: apk --no-cache add curl git
      - checkout
      - &restore_gems
        restore_cache:
          key: hellgrid-{{ checksum "hellgrid.gemspec" }}
      - &bundle_install
        run: |
          bundle config --local path "$BUNDLE_PATH"
          bundle check || bundle install
      - &cache_gems
        save_cache:
          key: hellgrid-{{ checksum "hellgrid.gemspec" }}
          paths:
            - vendor/bundle
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec spec --format progress
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
      - run:
          name: Make sure that the gem runs when installed
          command: |
            set -e
            gem build 'hellgrid.gemspec'
            gem install $(ls -t1 hellgrid-*.gem | head -1)
            cd ~ && hellgrid
  push-to-rubygems:
    <<: *defaults
    steps:
      - *install_packages
      - checkout
      - *restore_gems
      - *bundle_install
      - *cache_gems
      - run:
          name: Build the gem
          command: gem build $CIRCLE_PROJECT_REPONAME.gemspec
      - deploy:
          name: Publish to RubyGems
          command: |
            mkdir ~/.gem
            echo ":rubygems_api_key: $RUBYGEMS_API_KEY" >  ~/.gem/credentials
            chmod 0600 ~/.gem/credentials
            gem push $CIRCLE_PROJECT_REPONAME-$(echo $CIRCLE_TAG | sed -e 's/v//').gem

workflows:
  version: 2
  test-n-deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - push-to-rubygems:
          context: org-global
          requires:
            - test
          filters:
            tags:
              only: /^v\d.+/
            branches:
              ignore: /.*/
